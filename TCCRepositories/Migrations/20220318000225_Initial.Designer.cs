// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TCCRepositories.TCCContext;

#nullable disable

namespace TCCRepositories.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220318000225_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TCCDomain.Entities.ActionCategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ActionCategory");
                });

            modelBuilder.Entity("TCCDomain.Entities.ConfigurationsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Battery_Percentage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLampOn")
                        .HasColumnType("bit");

                    b.Property<bool>("Receive_Notifications")
                        .HasColumnType("bit");

                    b.Property<Guid>("Recording_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Recording_Id")
                        .IsUnique();

                    b.HasIndex("User_Id")
                        .IsUnique();

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("TCCDomain.Entities.DeviceLocationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("User_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("User_Id");

                    b.ToTable("DeviceLocation");
                });

            modelBuilder.Entity("TCCDomain.Entities.RecordingTimeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Ending_Time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Starting_Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RecordingTime");
                });

            modelBuilder.Entity("TCCDomain.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cel")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Worker_Count")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("TCCDomain.Entities.UserHistoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Category_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Category_Id")
                        .IsUnique();

                    b.HasIndex("User_Id");

                    b.ToTable("UserHistory");
                });

            modelBuilder.Entity("TCCDomain.Entities.ConfigurationsEntity", b =>
                {
                    b.HasOne("TCCDomain.Entities.RecordingTimeEntity", "Recording_Time")
                        .WithOne("Configurations")
                        .HasForeignKey("TCCDomain.Entities.ConfigurationsEntity", "Recording_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TCCDomain.Entities.UserEntity", "User")
                        .WithOne("Configurations")
                        .HasForeignKey("TCCDomain.Entities.ConfigurationsEntity", "User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recording_Time");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TCCDomain.Entities.DeviceLocationEntity", b =>
                {
                    b.HasOne("TCCDomain.Entities.UserEntity", "User")
                        .WithMany("Device_Locations")
                        .HasForeignKey("User_Id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TCCDomain.Entities.UserHistoryEntity", b =>
                {
                    b.HasOne("TCCDomain.Entities.ActionCategoryEntity", "Action_Category")
                        .WithOne("User_History")
                        .HasForeignKey("TCCDomain.Entities.UserHistoryEntity", "Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TCCDomain.Entities.UserEntity", "User")
                        .WithMany("User_History")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action_Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TCCDomain.Entities.ActionCategoryEntity", b =>
                {
                    b.Navigation("User_History")
                        .IsRequired();
                });

            modelBuilder.Entity("TCCDomain.Entities.RecordingTimeEntity", b =>
                {
                    b.Navigation("Configurations")
                        .IsRequired();
                });

            modelBuilder.Entity("TCCDomain.Entities.UserEntity", b =>
                {
                    b.Navigation("Configurations")
                        .IsRequired();

                    b.Navigation("Device_Locations");

                    b.Navigation("User_History");
                });
#pragma warning restore 612, 618
        }
    }
}
